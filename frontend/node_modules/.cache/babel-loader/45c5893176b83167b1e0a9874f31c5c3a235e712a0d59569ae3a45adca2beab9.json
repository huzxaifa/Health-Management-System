{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\huzai\\\\Downloads\\\\HealthHub-main\\\\HealthHub\\\\frontend\\\\src\\\\components\\\\profiles\\\\Client\\\\TestResultForm.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { TextField, Button, Grid, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestForm = ({\n  userId,\n  fetchTestResults,\n  setShowNewComponent\n}) => {\n  _s();\n  const [upperBP, setUpperBP] = useState('');\n  const [lowerBP, setLowerBP] = useState('');\n  const [heartRate, setHeartRate] = useState('');\n  const [date, setDate] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = {\n      upperBP,\n      lowerBP,\n      heartRate,\n      date\n    };\n    try {\n      console.log(formData);\n      const response = await axios.post(`http://localhost:3000/api/${userId}/post_test_result`, formData);\n      console.log('Test result saved:', response.data);\n      // Optionally, you can handle success response here\n      setShowNewComponent(false);\n      fetchTestResults();\n    } catch (error) {\n      console.error('Error saving test result:', error);\n      // Optionally, you can handle error response here\n    }\n  };\n  const handleExit = () => {\n    setShowNewComponent(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          bgcolor: '#f5f5f5',\n          borderRadius: '8px',\n          boxShadow: '0px 0px 8px rgba(0, 0, 0, 0.1)'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Upper Blood Pressure\",\n              type: \"number\",\n              value: upperBP,\n              onChange: e => setUpperBP(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Lower Blood Pressure\",\n              type: \"number\",\n              value: lowerBP,\n              onChange: e => setLowerBP(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Heart Rate\",\n              type: \"number\",\n              value: heartRate,\n              onChange: e => setHeartRate(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Date\",\n              type: \"date\",\n              value: date,\n              onChange: e => setDate(e.target.value),\n              required: true,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                margin: '5px'\n              },\n              variant: \"contained\",\n              color: \"primary\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleExit,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(TestForm, \"0R3jqSKQumuAmhM56mDGGN6gqbs=\");\n_c = TestForm;\nexport default TestForm;\nvar _c;\n$RefreshReg$(_c, \"TestForm\");","map":{"version":3,"names":["axios","React","useState","TextField","Button","Grid","Box","jsxDEV","_jsxDEV","TestForm","userId","fetchTestResults","setShowNewComponent","_s","upperBP","setUpperBP","lowerBP","setLowerBP","heartRate","setHeartRate","date","setDate","handleSubmit","e","preventDefault","formData","console","log","response","post","data","error","handleExit","container","justifyContent","children","item","xs","md","sx","p","bgcolor","borderRadius","boxShadow","onSubmit","mb","fullWidth","label","type","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","InputLabelProps","shrink","textAlign","margin","variant","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/huzai/Downloads/HealthHub-main/HealthHub/frontend/src/components/profiles/Client/TestResultForm.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { TextField, Button, Grid, Box } from '@mui/material';\r\n\r\nconst TestForm = ({ userId, fetchTestResults, setShowNewComponent }) => {\r\n  const [upperBP, setUpperBP] = useState('');\r\n  const [lowerBP, setLowerBP] = useState('');\r\n  const [heartRate, setHeartRate] = useState('');\r\n  const [date, setDate] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = { upperBP, lowerBP, heartRate, date };\r\n    try {\r\n      console.log(formData);\r\n      const response = await axios.post(`http://localhost:3000/api/${userId}/post_test_result`, formData);\r\n      console.log('Test result saved:', response.data);\r\n      // Optionally, you can handle success response here\r\n      setShowNewComponent(false);\r\n      fetchTestResults();\r\n    } catch (error) {\r\n      console.error('Error saving test result:', error);\r\n      // Optionally, you can handle error response here\r\n    }\r\n  };\r\n\r\n  const handleExit = () => {\r\n    setShowNewComponent(false);\r\n  };\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\">\r\n      <Grid item xs={12} md={6}>\r\n        <Box sx={{ p: 2, bgcolor: '#f5f5f5', borderRadius: '8px', boxShadow: '0px 0px 8px rgba(0, 0, 0, 0.1)' }}>\r\n          <form onSubmit={handleSubmit}>\r\n            <Box sx={{ mb: 2 }}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Upper Blood Pressure\"\r\n                type=\"number\"\r\n                value={upperBP}\r\n                onChange={(e) => setUpperBP(e.target.value)}\r\n                required\r\n              />\r\n            </Box>\r\n            <Box sx={{ mb: 2 }}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Lower Blood Pressure\"\r\n                type=\"number\"\r\n                value={lowerBP}\r\n                onChange={(e) => setLowerBP(e.target.value)}\r\n                required\r\n              />\r\n            </Box>\r\n            <Box sx={{ mb: 2 }}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Heart Rate\"\r\n                type=\"number\"\r\n                value={heartRate}\r\n                onChange={(e) => setHeartRate(e.target.value)}\r\n                required\r\n              />\r\n            </Box>\r\n            <Box sx={{ mb: 2 }}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Date\"\r\n                type=\"date\"\r\n                value={date}\r\n                onChange={(e) => setDate(e.target.value)}\r\n                required\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </Box>\r\n            <Box sx={{ textAlign: 'center' }}>\r\n              <Button sx={{ margin: '5px' }} variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleExit}>\r\n                Close\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TestForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}