{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\huzai\\\\Downloads\\\\HealthHub-main\\\\HealthHub\\\\frontend\\\\src\\\\components\\\\profiles\\\\Client\\\\AddRecord.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Grid, Paper, Typography, TextField, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddRecord = ({\n  userId,\n  handleAddSubmitRecord,\n  handleBack\n}) => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const prevPath = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.prevPath;\n  const [newRecord, setNewRecord] = useState({\n    date: '',\n    doctorName: '',\n    diagnosis: '',\n    prescription: ''\n  });\n  const [userData, setUserData] = useState(null);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/users/${userId}`);\n        setUserData(response.data);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n    if (userId) {\n      fetchUserData();\n    }\n  }, [userId]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewRecord({\n      ...newRecord,\n      [name]: value\n    });\n  };\n  const handleAddRecord = async () => {\n    try {\n      await axios.post('http://localhost:3000/api/medical-records', {\n        ...newRecord,\n        userId\n      });\n      console.log('New record added successfully', userData);\n      navigate('/ClientProfile', {\n        state: {\n          user: userData\n        }\n      });\n    } catch (error) {\n      console.error('Error adding new record:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    spacing: 2,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          padding: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Add New Medical Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), userData && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"date\",\n            name: \"date\",\n            label: \"Date\",\n            value: newRecord.date,\n            onChange: handleInputChange,\n            required: true,\n            sx: {\n              marginBottom: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"text\",\n            name: \"doctorName\",\n            label: \"Doctor's Name\",\n            value: newRecord.doctorName,\n            onChange: handleInputChange,\n            required: true,\n            sx: {\n              marginBottom: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"text\",\n            name: \"diagnosis\",\n            label: \"Diagnosis\",\n            value: newRecord.diagnosis,\n            onChange: handleInputChange,\n            required: true,\n            sx: {\n              marginBottom: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"text\",\n            name: \"prescription\",\n            label: \"Prescription\",\n            value: newRecord.prescription,\n            onChange: handleInputChange,\n            required: true,\n            sx: {\n              marginBottom: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => handleAddSubmitRecord(newRecord, userId),\n            sx: {\n              marginRight: 2\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: handleBack,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(AddRecord, \"u6xLWpcXHAtA2QqBM9gQYhDURw8=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AddRecord;\nexport default AddRecord;\nvar _c;\n$RefreshReg$(_c, \"AddRecord\");","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","useNavigate","Grid","Paper","Typography","TextField","Button","jsxDEV","_jsxDEV","AddRecord","userId","handleAddSubmitRecord","handleBack","_s","_location$state","navigate","location","prevPath","state","newRecord","setNewRecord","date","doctorName","diagnosis","prescription","userData","setUserData","fetchUserData","response","get","data","error","console","handleInputChange","e","name","value","target","handleAddRecord","post","log","user","container","justifyContent","spacing","children","item","xs","md","elevation","sx","padding","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","type","label","onChange","required","marginBottom","onClick","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/huzai/Downloads/HealthHub-main/HealthHub/frontend/src/components/profiles/Client/AddRecord.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { Grid, Paper, Typography, TextField, Button } from '@mui/material';\r\n\r\nconst AddRecord = ({ userId, handleAddSubmitRecord,handleBack }) => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const prevPath = location.state?.prevPath;\r\n\r\n  const [newRecord, setNewRecord] = useState({\r\n    date: '',\r\n    doctorName: '',\r\n    diagnosis: '',\r\n    prescription: ''\r\n  });\r\n\r\n  const [userData, setUserData] = useState(null); \r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:3000/api/users/${userId}`);\r\n        setUserData(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    };\r\n\r\n    if (userId) {\r\n      fetchUserData();\r\n    }\r\n  }, [userId]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewRecord({\r\n      ...newRecord,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleAddRecord = async () => {\r\n    try {\r\n      await axios.post('http://localhost:3000/api/medical-records', {\r\n        ...newRecord,\r\n        userId\r\n      });\r\n\r\n      console.log('New record added successfully', userData);\r\n\r\n      navigate('/ClientProfile', { state: { user: userData } });\r\n    } catch (error) {\r\n      console.error('Error adding new record:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" spacing={2}>\r\n      <Grid item xs={12} md={6}>\r\n        <Paper elevation={3} sx={{ padding: 2 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Add New Medical Record\r\n          </Typography>\r\n\r\n          {userData && (\r\n            <div>\r\n              {/* Add other user details as needed */}\r\n            </div>\r\n          )}\r\n\r\n          <form>\r\n            <TextField\r\n              fullWidth\r\n              type=\"date\"\r\n              name=\"date\"\r\n              label=\"Date\"\r\n              value={newRecord.date}\r\n              onChange={handleInputChange}\r\n              required\r\n              sx={{ marginBottom: 2 }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              type=\"text\"\r\n              name=\"doctorName\"\r\n              label=\"Doctor's Name\"\r\n              value={newRecord.doctorName}\r\n              onChange={handleInputChange}\r\n              required\r\n              sx={{ marginBottom: 2 }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              type=\"text\"\r\n              name=\"diagnosis\"\r\n              label=\"Diagnosis\"\r\n              value={newRecord.diagnosis}\r\n              onChange={handleInputChange}\r\n              required\r\n              sx={{ marginBottom: 2 }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              type=\"text\"\r\n              name=\"prescription\"\r\n              label=\"Prescription\"\r\n              value={newRecord.prescription}\r\n              onChange={handleInputChange}\r\n              required\r\n              sx={{ marginBottom: 2 }}\r\n            />\r\n            <Button variant=\"contained\" onClick={() => handleAddSubmitRecord(newRecord,userId)} sx={{ marginRight: 2 }}>\r\n              Save\r\n            </Button>\r\n            <Button variant=\"outlined\" onClick={handleBack}>\r\n              Cancel\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AddRecord;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}